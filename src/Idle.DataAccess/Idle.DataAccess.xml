<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Idle.DataAccess</name>
    </assembly>
    <members>
        <member name="T:Idle.DataAccess.Common.Difficulty">
            <summary>
            An enum defining the different levels of difficulty
            </summary>
        </member>
        <member name="F:Idle.DataAccess.Common.Difficulty.None">
            <summary>
            If difficulty is not applicable
            </summary>
        </member>
        <member name="F:Idle.DataAccess.Common.Difficulty.Easy">
            <summary>
            Easy difficulty, examples would include HTML and CSS
            </summary>
        </member>
        <member name="F:Idle.DataAccess.Common.Difficulty.Medium">
            <summary>
            Medium difficulty, examples include JavaScript and Python
            </summary>
        </member>
        <member name="F:Idle.DataAccess.Common.Difficulty.Hard">
            <summary>
            Hard difficulty, examples include Java and C#
            </summary>
        </member>
        <member name="F:Idle.DataAccess.Common.Difficulty.Expert">
            <summary>
            Expert difficulty, examples include C and C++
            </summary>
        </member>
        <member name="F:Idle.DataAccess.Common.Difficulty.Nightmare">
            <summary>
            Nightmare difficulty, examples include x86 assembly
            </summary>
        </member>
        <member name="P:Idle.DataAccess.Fields.LanguageBase.Name">
            <summary>
            Name of the language
            </summary>
        </member>
        <member name="P:Idle.DataAccess.Fields.LanguageBase.Description">
            <summary>
            Description of the language
            </summary>
        </member>
        <member name="P:Idle.DataAccess.Fields.LanguageBase.Difficulty">
            <summary>
            Difficulty of the language
            </summary>
        </member>
        <member name="P:Idle.DataAccess.Fields.LanguageBase.XP">
            <summary>
            XP in this language
            </summary>
        </member>
        <member name="P:Idle.DataAccess.Fields.LanguageBase.Level">
            <summary>
            Level in this language
            </summary>
        </member>
        <member name="P:Idle.DataAccess.Fields.LanguageBase.Grade">
            <summary>
            Grade in this language
            </summary>
        </member>
        <member name="P:Idle.DataAccess.Fields.LanguageBase.XPCost">
            <summary>
            Cost of this language
            </summary>
        </member>
        <member name="T:Idle.DataAccess.Fields.Languages.CSharp">
            <summary>
            Class for the C# language
            </summary>
        </member>
        <member name="T:Idle.DataAccess.ICoinCost">
            <summary>
            An interface that defines the cost of something in coins
            </summary>
        </member>
        <member name="P:Idle.DataAccess.ICoinCost.CoinCost">
            <summary>
            The cost of something in coins (Items are bought with coins)
            </summary>
        </member>
        <member name="T:Idle.DataAccess.ICoinIncome">
            <summary>
            Interface defining income in coins
            </summary>
        </member>
        <member name="P:Idle.DataAccess.ICoinIncome.CoinIncome">
            <summary>
            Income in coins
            </summary>
        </member>
        <member name="T:Idle.DataAccess.IDescriptive">
            <summary>
            Interface that defines descriptive properties.
            </summary>
        </member>
        <member name="P:Idle.DataAccess.IDescriptive.Name">
            <summary>
            Name, could be used as the name of a programming language, the name of an in game item, the name of job/buff/project, etc.
            </summary>
        </member>
        <member name="P:Idle.DataAccess.IDescriptive.Description">
            <summary>
            The description of something
            </summary>
        </member>
        <member name="P:Idle.DataAccess.IDescriptive.Difficulty">
            <summary>
            The difficulty of something, could be a language/framework/tool, a job/project, etc
            </summary>
        </member>
        <member name="T:Idle.DataAccess.IProgress">
            <summary>
            Interface that defines properties for in game progression or levelling
            </summary>
        </member>
        <member name="P:Idle.DataAccess.IProgress.XP">
            <summary>
            The amount of experience points the player has in something.
            Could refer to overall XP of the player, XP in a certain language/framework/tool, XP in his job, etc.
            </summary>
        </member>
        <member name="P:Idle.DataAccess.IProgress.Level">
            <summary>
            The level the player has in something.
            Could refer to overall level of the player, level in a certain language/framework/tool, level in his job, etc.
            Should be increased when enough XP has been earned.
            </summary>
        </member>
        <member name="P:Idle.DataAccess.IProgress.Grade">
            <summary>
            The grade (rank) of the player in something.
            Shows the proficiency of the player overall, in a certain language/framework/tool, in his job, etc.
            Should be based on what level the player is at, sort of gives a ranking factor that makes the game more interesting that just plain levels.
            </summary>
        </member>
        <member name="T:Idle.DataAccess.IXPCost">
            <summary>
            An interface that defines the cost of something in XP
            </summary>
        </member>
        <member name="P:Idle.DataAccess.IXPCost.XPCost">
            <summary>
            The cost of something in player XP (languages/frameworks/tools are bought with player XP)
            </summary>
        </member>
        <member name="T:Idle.DataAccess.IXPIncome">
            <summary>
            Interface defining income in XP of the language/framework/tool, etc. (NOT player XP)
            </summary>
        </member>
        <member name="P:Idle.DataAccess.IXPIncome.XPIncome">
            <summary>
            Income in XP
            </summary>
        </member>
        <member name="T:Idle.DataAccess.ModelBase">
            <summary>
            Base class for all models
            </summary>
        </member>
    </members>
</doc>
